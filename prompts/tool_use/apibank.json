{
  "apibank_generation": {
    "template": "You are an expert at calling APIs based on user queries and API documentation.\nGiven a user query and available APIs, determine which API to call and with what parameters.\n\nUser Query: {query}\nAvailable APIs: {api_docs}\nAPI Call:",
    "description": "Zero-shot generation-based API-Bank prompt"
  },
  "apibank_generation_simple": {
    "template": "Call the appropriate API for this user query.\n\nUser Query: {query}\nAPI Call:",
    "description": "Simple zero-shot API-Bank prompt"
  },
  "apibank_generation_detailed": {
    "template": "You are an expert at calling APIs based on user queries and API documentation.\nAnalyze the user query carefully and select the most appropriate API call.\n\nUser Query: {query}\nAvailable APIs: {api_docs}\n\nThink step by step:\n1. Understand what the user wants\n2. Find the relevant API from the documentation\n3. Extract the necessary parameters from the query\n4. Format the API call correctly\n\nAPI Call:",
    "description": "Detailed generation-based API-Bank prompt with reasoning steps"
  },
  "apibank_3shot_generation": {
    "template_prefix": "You are an expert at calling APIs based on user queries and API documentation.\nHere are some examples:\n\n",
    "few_shot_example_template": "User Query: {query}\nAvailable APIs: {api_docs}\nAPI Call: {api_call}",
    "few_shot_separator": "\n\n",
    "template_suffix": "Now determine the appropriate API call:\nUser Query: {query}\nAvailable APIs: {api_docs}\nAPI Call:",
    "description": "3-shot generation-based API-Bank prompt template"
  },
  "apibank_5shot_generation": {
    "template_prefix": "You are an expert at calling APIs based on user queries and API documentation.\nHere are some examples:\n\n",
    "few_shot_example_template": "User Query: {query}\nAvailable APIs: {api_docs}\nAPI Call: {api_call}",
    "few_shot_separator": "\n\n",
    "template_suffix": "Now determine the appropriate API call:\nUser Query: {query}\nAvailable APIs: {api_docs}\nAPI Call:",
    "description": "5-shot generation-based API-Bank prompt template"
  },
  "apibank_structured": {
    "template": "Task: API Function Calling\n\nUser Request: {query}\nAvailable APIs: {api_docs}\n\nSelect the most appropriate API and provide the function call with correct parameters.\n\nAPI Call:",
    "description": "Structured API-Bank prompt with clear task definition"
  },
  "apibank_conversational": {
    "template": "I need to help a user by calling the right API. Here's what they want:\n\nUser: {query}\n\nI have these APIs available:\n{api_docs}\n\nI should call:",
    "description": "Conversational style API-Bank prompt"
  },
  "default_few_shot_examples_apibank": [
    {
      "query": "What's the weather like in New York today?",
      "api_docs": "get_weather(location: str, date: str) - Get weather information for a specific location and date",
      "api_call": "get_weather(location='New York', date='today')"
    },
    {
      "query": "Book a flight from San Francisco to Chicago on December 15th",
      "api_docs": "book_flight(origin: str, destination: str, date: str, passengers: int) - Book a flight ticket",
      "api_call": "book_flight(origin='San Francisco', destination='Chicago', date='December 15th', passengers=1)"
    },
    {
      "query": "Send an email to my manager about the project update",
      "api_docs": "send_email(recipient: str, subject: str, body: str) - Send an email message",
      "api_call": "send_email(recipient='manager', subject='Project Update', body='Project update information')"
    },
    {
      "query": "Find restaurants near Times Square that serve Italian food",
      "api_docs": "search_restaurants(location: str, cuisine: str, radius: int) - Search for restaurants by location and cuisine",
      "api_call": "search_restaurants(location='Times Square', cuisine='Italian', radius=1000)"
    },
    {
      "query": "Set a reminder for my dentist appointment tomorrow at 2 PM",
      "api_docs": "create_reminder(title: str, datetime: str, description: str) - Create a reminder",
      "api_call": "create_reminder(title='Dentist appointment', datetime='tomorrow 2:00 PM', description='Dentist appointment reminder')"
    },
    {
      "query": "Get the latest stock price for Apple",
      "api_docs": "get_stock_price(symbol: str, exchange: str) - Get current stock price for a given symbol",
      "api_call": "get_stock_price(symbol='AAPL', exchange='NASDAQ')"
    },
    {
      "query": "Translate 'Hello world' to French",
      "api_docs": "translate_text(text: str, source_lang: str, target_lang: str) - Translate text between languages",
      "api_call": "translate_text(text='Hello world', source_lang='English', target_lang='French')"
    },
    {
      "query": "Calculate the tip for a $50 bill with 18% tip rate",
      "api_docs": "calculate_tip(bill_amount: float, tip_percentage: float) - Calculate tip amount",
      "api_call": "calculate_tip(bill_amount=50.0, tip_percentage=18.0)"
    },
    {
      "query": "Play some jazz music",
      "api_docs": "play_music(genre: str, volume: int, shuffle: bool) - Play music by genre",
      "api_call": "play_music(genre='jazz', volume=50, shuffle=true)"
    },
    {
      "query": "Order a large pepperoni pizza for delivery",
      "api_docs": "order_food(restaurant: str, items: list, delivery_type: str, address: str) - Order food from restaurants",
      "api_call": "order_food(restaurant='pizza_place', items=['large pepperoni pizza'], delivery_type='delivery', address='current_location')"
    },
    {
      "query": "Check my calendar for next week",
      "api_docs": "get_calendar_events(start_date: str, end_date: str, calendar_id: str) - Retrieve calendar events",
      "api_call": "get_calendar_events(start_date='next week start', end_date='next week end', calendar_id='primary')"
    },
    {
      "query": "Turn on the living room lights",
      "api_docs": "control_smart_device(device_type: str, location: str, action: str, intensity: int) - Control smart home devices",
      "api_call": "control_smart_device(device_type='lights', location='living room', action='turn_on', intensity=100)"
    },
    {
      "query": "Find the nearest gas station",
      "api_docs": "find_nearby_places(place_type: str, location: str, radius: int, sort_by: str) - Find nearby places",
      "api_call": "find_nearby_places(place_type='gas_station', location='current_location', radius=5000, sort_by='distance')"
    },
    {
      "query": "Convert 100 USD to EUR",
      "api_docs": "convert_currency(amount: float, from_currency: str, to_currency: str) - Convert between currencies",
      "api_call": "convert_currency(amount=100.0, from_currency='USD', to_currency='EUR')"
    },
    {
      "query": "Get directions to the airport",
      "api_docs": "get_directions(start_location: str, end_location: str, transport_mode: str) - Get navigation directions",
      "api_call": "get_directions(start_location='current_location', end_location='airport', transport_mode='driving')"
    },
    {
      "query": "Check if there are any software updates available",
      "api_docs": "check_system_updates(update_type: str, auto_install: bool) - Check for system updates",
      "api_call": "check_system_updates(update_type='software', auto_install=false)"
    },
    {
      "query": "Create a new document called 'Meeting Notes'",
      "api_docs": "create_document(title: str, content: str, folder: str, doc_type: str) - Create a new document",
      "api_call": "create_document(title='Meeting Notes', content='', folder='Documents', doc_type='text')"
    },
    {
      "query": "Search for news about artificial intelligence",
      "api_docs": "search_news(keywords: str, category: str, date_range: str, source: str) - Search for news articles",
      "api_call": "search_news(keywords='artificial intelligence', category='technology', date_range='last_week', source='all')"
    },
    {
      "query": "Set the thermostat to 72 degrees",
      "api_docs": "control_thermostat(temperature: int, mode: str, location: str) - Control thermostat settings",
      "api_call": "control_thermostat(temperature=72, mode='auto', location='main')"
    },
    {
      "query": "Add milk to my shopping list",
      "api_docs": "add_to_shopping_list(item: str, quantity: int, category: str, priority: str) - Add items to shopping list",
      "api_call": "add_to_shopping_list(item='milk', quantity=1, category='dairy', priority='normal')"
    }
  ],
  "apibank_prompt_variations": {
    "system_message_1": "You are an AI assistant capable of calling various APIs to help users accomplish tasks. When given a user query and available APIs, select the most appropriate API and format the call correctly.",
    "system_message_2": "You are a function calling expert. Your job is to analyze user requests and translate them into proper API calls using the available functions.",
    "system_message_3": "I am an API calling assistant. I can help you interact with various services by calling the appropriate APIs based on your requests."
  },
  "evaluation_criteria": {
    "exact_match": "The predicted API call must exactly match the reference call including parameter names, values, and formatting.",
    "semantic_match": "The predicted API call should accomplish the same task as the reference, even if parameter names or formatting differ slightly.",
    "function_name_match": "The correct API function should be called, regardless of parameter accuracy.",
    "parameter_accuracy": "The parameters should be correctly extracted from the user query and properly formatted."
  }
}